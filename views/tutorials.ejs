<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://fonts.googleapis.com/css2?family=Oswald:wght@600;700&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/resources/bootstrap.min.css">
    <link rel="stylesheet" href="/resources/styles.css">
    <title>Video Tube</title>
</head>
<body>
    <section class="main">
        <nav class="navbar navbar-expand-lg  nb">
          <a class="navbar-brand nbb" href="#"><span>Video</span>Tube</a>
            <button class="navbar-toggler navbar-light " type="button" data-toggle="collapse" data-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
              <span class="navbar-toggler-icon "></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
                <ul class="navbar-nav ml-auto">
                    <li class="nav-item">
                      <a class="nav-link" href="#">Request Tutorial</a>
                    </li>
                    <li class="nav-item">
                      <a class="nav-link" href="#">Other Portals</a>
                    </li>
                  </ul>
            </div>
          </nav>
          <div class="modal fade" id="viewTut" tabindex="-1" aria-labelledby="viewTutLabel" aria-hidden="true">
            <div class="modal-dialog modal-xl">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title" id="viewTutLabel">View Tutorial</h5>
                  <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                  </button>
                </div>
                <div class="modal-body">
                    <div class="p-2" id="tutorial"></div>
                </div>
              </div>
            </div>
          </div>

          <section class="search p-3">
            <form id="search">
              <div class="row">
                <div class="col-md-12 mt-2">
                  <input type="text" id="query" class="w-100 query" placeholder="Search">
                </div>

              </div>
            </form>

            <ul class="list-group  mt-2" id="queryRes">

            </ul>
          </section>
          <div class="w-100" id="comment"></div>
          <section class="px-3">
            <div id="content" class="row">
  
            </div>
          </section>
    </section>
</body>

<script src="/resources/axios.min.js"></script>
<script src="/resources/jquery-3.5.1.slim.min.js"></script>
<script src="/resources/popper.min.js" ></script>
<script src="/resources/bootstrap.min.js"></script>

<script>
 const content = document.getElementById('content');
 const search = document.getElementById('search');
const queryRes = document.getElementById('queryRes');
const comment = document.getElementById('comment');

    let itemTitles =[];
    const getTuts=()=>{
      content.innerHTML =``;    
      axios.get('/api/video').then(res=>{
        if(res.data.count>0){
          const items = res.data.data;
          items.forEach(item=>{
              render(item);
              const title= item.name.trim().toLowerCase();
              itemTitles.push({name:title,_id:item._id});
          })
        }
        else{
          comment.innerHTML =`<div class="w-100 text-center"><p class="text-secondary">No Videos Uploaded yet</p></div>`;
        }
      })
    } ;


    getTuts();

      const render = (item)=>{
        let html = 
            `
            <div class="col-md-4 mt-4" id="item">
            <div class="card">
              <div class="video-container w-100">
              <video src="${item.path}" id="view" data-id="${item._id}" data-toggle="modal" data-target="#viewTut"  class="w-100"></video>
              </div>
            <div class="card-body">
              <div class="w-100">
                <span class="card-title float-left" id="view" data-id="${item._id}" data-toggle="modal" data-target="#viewTut">${item.name}</span>
                <span class="float-right options">
                  <div class="dropdown show">
                        <a class="options" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                          &#8942
                        </a>

                        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuLink">
                          <a href="#" class="dropdown-item"  id="view" data-id="${item._id}" data-toggle="modal" data-target="#viewTut">Watch</a>
                        </div>
                      </div>  
                </span>
              </div>
                <p class="card-text text-secondary">${item.description}</p>
               
            </div>
            </div>
         </div>
            `
            content.innerHTML += html
    };

    content.addEventListener('click',(e)=>{
      if(e.target.id == 'view'){
         const _id = e.target.getAttribute('data-id');
         axios.get(`/api/video/${_id}`).then(res=>{
            renderView(res.data.data);
         })
      }
    });


    const renderView =(item)=>{
      let html =
        ` 
        <div>
          <div class="playvidcontainer">
          <video src="${item.path}" id="tut" class="w-100" controls autoplay></video>
          </div>
          <div class="mt-4">
            <h5 class="card-title">${item.name}</h5>
          </div>
          <div class="mt-4">
            <p class="card-text">${item.description}</p>
          </div>
         </div>
        `;

        tutorial.innerHTML = html;
    }

    $('#viewTut').on('hidden.bs.modal', function (e) {
        $('#tut').get(0).pause();
    })


    search.addEventListener('input',(e)=>{
        e.preventDefault();
         let query = search['query'].value;
        
        if(query && query.trim().length>0){
          query = query.trim().toLowerCase();
          setList(
            itemTitles.filter(item=>{
                return item.name.includes(query);
              }).sort((itemA,itemB)=>{
                return getRelevancy(itemA.name, query) - getRelevancy(itemB.name, query);   
            })
          )
                       
          
        }
        else{
          queryRes.innerHTML=``;
          itemTitles=[];
          getTuts();
        }
    })

    function setList(group){
         clearList();

        for(const person of group){
          const item = document.createElement('li');
          item.classList.add("list-group-item");
          item.classList.add("queryRes");
          item.setAttribute("id","view");
          item.setAttribute("data-id",person._id);
          item.setAttribute("data-toggle","modal");
          item.setAttribute("data-target","#viewTut");
          const text = document.createTextNode(person.name);
          item.appendChild(text);
          queryRes.appendChild(item);
        }

        if(group.length === 0){
          content.innerHTML=` No results Found`;
        }
  };

const getRelevancy= (value, searchTerm)=>{
          if(value === searchTerm){
            return 2;
        } else if(value.startsWith(searchTerm)){
        return 1;
      }else if (value.includes(searchTerm)){
        return 0;
      }else{
        return -1;
      }

}


function clearList(){
  while(queryRes.firstChild){
    queryRes.removeChild(queryRes.firstChild);
  }
};


queryRes.addEventListener('click',(e)=>{
  if(e.target.id == "view"){
    const _id = e.target.getAttribute('data-id');
         axios.get(`/api/video/${_id}`).then(res=>{
            renderView(res.data.data);
         })
  }
});
    
</script>
</html>